1. escribir un .gen
2. delaunay.exe para crear un .fem
3. campo usa el .fem

adicionalmente pre2d para generar un .dir a partir del .fem para ver con view2d

The program DELAUNAY is a bidimensional finite element mesh generator.
The elements are triangular shaped with 3 nodes (linear shape functions). 
 
The input data for this program is edited in an ASCII file with name given
by the user and extension ".gen". Two types of information are contained in 
this data file.
 
a) Geometry definition
    The domain is considered to be formed by the union of AREAS.
    Each  AREA is bounded by a set of LINES and each LINE is 

    defined by KEYPOINTS. Three diferent LINES can be used:
    straight lines, arches and B-Spline curves.
 
 
b) Mesh characteristics
   Size and distribution of the elements within the mesh are defined in two different ways:
    - through the setting of a uniform element size or 
    - through the definition of a "back-ground grid".  A simple (rough) mesh 
      of finite elements embracing the domain is constructed by hand. At each node of this 
      mesh, three parameters are defined: size of the element, stretching factor and direction

      of stretching. At each point of the domain these three values are interpolated
      and a new element is generated  according with this information. This alternative
      allows an experienced user to define "a priori" the regions where element refinement 
      is needed. The actual version of the program ignores the values assigned to the
      stretching factor and direction of the stretching.
 
   A last alternative consist of applying the adaptive techniques offered by the system FIESTA. Once a 

   first analysis is finished, the program H_ADAPT estimates the error and generates two new files:
   a new DELAUNAY  (ASCII) input file (with extension ".gen") and a binary file with extension ".rem" 
   containing information about elements size and shape. With these two files the program DELAUNAY 
   generates a new mesh adapted to the problem. 
 
   All the data within the ".gen" ASCII file is organized by keywords showing the
   beginning of a set of informations. A free format style is used.

 
 
The program DELAUNAY works with the following input-output set of files
 
    Input:
    - <anyname>.gen (ASCII) - Edited by the user, containing  the input data. (<anyname> 
            has at most 7 characters).
    - <anyname>.rem (binary) - File generated by the program H_ADAPT in an adaptive procedure.
            It contains data associated to size and distribution of the elements.
 
    Output:
    - <anyname>0.dir
    - <anyname>0.bdg    (binary) - Input files for the program G2FEM

    - <anyname>.fem (ASCII) - File containing ONLY mesh information. This file must be
            completed with mechanical information by using the program G2FEM 
            (or editing it by hand) BEFORE RUNNING the program STRESS of the FIESTA System.
    - <anyname>.dir
    - <anyname>.bdg (binary) - Files containing graphic information. Input data
            for the visualization programs.
.

All the data within the ".gen" ASCII file is organized by keywords showing the
   beginning of a set of informations. The keywords used are the following:
 
    Keywords:
 
        *TITLE
 
        *BACKGROUND_GRID
 
        *ELEMENT_SIZE
 
        *KEYPOINTS
 
        *LINES
 
        *AREAS
 
        *END
 
 
TITLE

This keyword is used to give a title (identification) to the problem. It  must end with the 
    character  *  in the first column.
 
    Example:
        *TITLE      Keyword
              Analysis number 12 - Quadratic elements             
              12/05/94
        *                                  End of title
 
 MESH PARAMETERS

 Size and shape of the elements can be defined in two different ways:
 
a) Definition of a uniform element size using the keyword  ELEMENT_SIZE:
 
    Example:
        *ELEMENT_SIZE
        0.4
 
b) Definition of a "back-ground grid".  A simple (rough) mesh 
    of finite elements embracing the domain is constructed by hand. At each node of this 
    mesh, three parameters are defined: 
    - size of the element
    - stretching factor
    - direction of stretching. 

    At each point of the domain these three values are interpolated and a new element is 
   generated  according with this information. This alternative allows an experienced user 
   to define "a priori" the regions where element refinement is needed. In most structural 
   problems, no stretching is used. In this case this factor is equal to 1.0 (thus the angle has
   no sense, say 0.0). The actual version of the program anly allows problems with no
   stretching for this reazon the program ignores these two values. The data is the following:

 
    *BACKGROUND_GRID     keyword
    Number of nodes of the grid
    For each node:
        Number of the node
        Nodal coordinates
        Size of the element
        Stretching factor                 
        Stretching direction (angle)
    
    Number of elements of the grid
    For each element:
        Number of the element
        Element incidence
 
    Example:
        *BACKGROUND_GRID
        4
        1   0.0   0.0    0.02    1.0    0.0

        2   2.0   0.0    0.02    1.0    0.0
        3   2.0   2.0    0.30    1.0    0.0
        4   0.0   2.0    0.30    1.0    0.0
 
        2
        1   1   2   3
        2   1   3   4
 
    In this example, the grid is formed by:
    - four nodes: 1, 2, 3, 4, with coordinates, sizeof the element, stretching factor 
       (1.0 - no stretching) and direction of stretching.
    - two triangles: (1-2-3) e (1-3-4).
 
    The mesh to be generated will show an element size that increases from the value

    0.02  (for elements near the Y-coordinate = 0.0 ) to the value 0.3 (for elements near the 
    Y-coordinate = 2.0).
 
    NOTE: If none of the keywords above is used, the program DELAUNAY looks for a binary file 
    with extension ".rem" containing information about elements size and shape, created
    by the program H_ADAPT in an adaptive procedure (FIESTA System).Ã‡

KEYPOINTS

  Definition of keypoints within the domain. They will appear as nodes
    within the structure and are used to define the LINES and interior nodes
    within the AREAS.
    
    The data is given as follows:
 
        *KEYPOINTS      keyword
        Number of keypoints
        For each keypoint
            Number of the keypoint 
            Coordinates
 
    Example:
        *KEYPOINTS
        2
        1   2.0 1.0
        2   1.5 1.0

LINES

 This keyword is used to define the lines bounding each area. Three types of lines
    can be used: straight lines, arches and B-Spline curves:
 
    - LINE    straight line defined by initial and final KEYPOINTS 
    - ARCH  arch of circle defined by initial and final KEYPOINTS and the 
        center-of-the-circle coordinates.
    - BSPLINE  B-Spline curve defined by initial and final KEYPOINTS, 
        number of internal control nodes (excluding initial and final keypoints) and their

        coordinates
 
    The data is given as follows:
 
    *LINES              keyword
    Number of Lines
    For each line:
        Number of the line
        Type of the line  (LINE, ARCH ou BSPLINE)
        Number of the initial and final keypoints
        If the line is  ARCH:
            Center-of-the-circle coordinates
        If the line is BSPLINE
            Number of internal control nodes
            Coordinates of the control nodes
 

    Example:
        *LINES
        3
        1   LINE        1   2
        2   BSPLINE  2  2
            4
            1.0   0.75
            1.2   1.20
            1.8   1.50
            2.2   0.45
        3   ARCH        3   3    1.5    1.5
 
    NOTE: The ARCH is always defined in a counterclockwise direction.
 
 AREAS

     The domain is considered to be formed by the union of AREAS and ach area
    is defined by the union of oriented LINES bounding it. This orientation
    must satisfy that the area rests at the left of the oriented line. In other words:
 
    - External  lines must be oriented in a counterclockwise direction. If the 
      line was defined in a clockwise direction, change its orientation with the sign "-".
 
    - Internal lines (holes) must be oriented in a clockwise direction. If the 

      line was defined in a counterclockwise direction, change its orientation with the sign "-".
 
    If the area needs some internal fixed nodes (with specified coordinates) they should have
    been defined as KEYPOINTS.
 
    The implemented algorithm for the Delaunay mesh generation is given by the following steps:
    1) Generation of a Delaunay triangulation using the nodes of the boundary,
    2) Elimination of all triangle which does not belong to the body,

    3) Recuperation of boundary edges,
    4) Using partition of elements and diagonal swaping, adaptation of the actual triangle size to
        the size specified by the BACKGROUND_GRID  
    5) Mesh qaulity improvment by smoothing iterations defined bu the user,
 
    The data is given as follows:
 
    *AREAS      keyword
    Number of areas
    For each area:
     *AREA_<Number of the area>
        Number of the area
        Number of LINES bounding the area

        For each line:
            Number of the LINE (with the sign "-" if the orientation must be changed)
 
        Number of interior KEYPOINTS (zero for none)
        For each interior keypoint
            Number of the keypoint
        
        SMOOTH_ON/_OFF
             if SMOOTH_ON   Number of smothing iterations process (>= 0)   
 
        
    Example:
        *AREAS
        2                   Two areas will be defined
        *AREA_1
        1                   Area 1:

        4                   Area 1 is bounded by four LINES
        1   2   3   -4    Num. of the LINES bounding the area (note that the orientation of the line 4 was changed)
        0                   No interior nodes will be defined.
        SMOOTH_OFF
        *AREA_2
        2                   Area 2:
        1   3              Area 2 is bounded by one line (may be a closed arch or B-Spline) with number 3.
        0       No interior nodes will be defined.
        SMOOTH_OFF

END

 
    This keyword is used to indicate the end of the file. Any word or character
    below END will be ignored.
 
    *END        keyword

EXAMPLE

*TITLE
     Generation of a square ( 4.0 x 4.0 ) with a hole (r=1.0)
     Linear elements.
     Edit this file to see the generation
*
 
*ELEMENT_SIZE
     0.5            Uniform element size = 0.5
 
*KEYPOINTS
5           5 Keypoints: 4 to define the square. 1 to define the hole
1     0.0    0.0
2     4.0    0.0
3     4.0    4.0
4     0.0    4.0
5     3.0    2.0
 
*LINES          
5           5 lines: 4 to define the external boundary. 1 to define the hole

 1   LINE   1    2      centered at coordinate (2.0, 2.0).
 2   LINE   2    3  
 3   LINE   3    4
 4   LINE   4    1
 5   ARCH  5   5    2.0    2.0
 
*AREAS
1                           1 Area is defined.
*AREA_1
1           Area 1 is defined by 5 lines. Lines 1-4 were defined with proper orientation
5   1  2  3  4  -5  The arch is always oriented in the counterclockwise direction. Thus, to define 
                                properly this area, its sign must be changed.

0           No internal nodes are defined.
SMOOTH_ON
 6
 
*REMESH                 ONLY IF ADAPTIVE PROCEDURE WILL BE USED (see H_ADAPT HELP of the FIESTA System)
0.02  
0
0
 
*END